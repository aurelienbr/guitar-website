{"version":3,"file":"1.a2d279ff3679b0a235e1.hot-update.js","sources":["webpack:///pages/_app.js"],"sourcesContent":["import App, { Container } from \"next/app\";\r\nimport React from \"react\";\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducers from \"../redux\";\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport { findVideos } from \"../actions/videos\";\r\n\r\nconst makeStore = (initialState, option) => {\r\n  return createStore(reducers, initialState, applyMiddleware(thunkMiddleware));\r\n};\r\n\r\nclass MyApp extends App {\r\n  static async getInitialProps({ Component, router, ctx }) {\r\n    let pageProps = {};\r\n\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n    await ctx.store.dispatch(findVideos());\r\n\r\n    return { pageProps };\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, store } = this.props;\r\n    return (\r\n      <Container>\r\n        <Provider store={store}>\r\n          <Component {...pageProps} />\r\n        </Provider>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    findVideos: () => {\r\n      dispatch(findVideos());\r\n    }\r\n  };\r\n};\r\n\r\nexport default withRedux(makeStore, null, mapDispatchToProps)(MyApp);\r\n\n\n\n// WEBPACK FOOTER //\n// pages/_app.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAYA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;AApBA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;;AACA;AACA;;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAVA;AACA;AAuBA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;;;;;;;;;;;;AApCA;AAIA;AAwBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}